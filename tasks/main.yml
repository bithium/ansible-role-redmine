---
# tasks file for redmine

- name: Install required packages
  package: name="{{redmine_packages}}" state=present

- name: Download redmine source
  git:
    repo: "{{redmine_url}}"
    dest: "{{redmine_checkout_path}}"
    version: "{{redmine_version}}"
    depth: 1
    force: true
    update: "{{redmine_version is undefined}}"
  become: true
  become_user: "{{rails_app_user}}"

- name: Download redmine plugins (git)
  git:
    repo: "{{item.url}}"
    dest: "{{redmine_checkout_path}}/plugins/{{item.path}}"
    version: "{{item.version | default(omit) }}"
    depth: 1
    force: true
    update: "{{item.version is undefined}}"
  with_items: "{{redmine_plugins['git']}}"
  when: redmine_plugins is defined and redmine_plugins['git'] is defined
  become: true
  become_user: "{{rails_app_user}}"

- name: Download redmine plugins (file)
  get_url:
    url: "{{item.url}}"
    dest: "{{redmine_checkout_path}}/plugins/"
    url_username: "{{ item.username | default(omit) }}"
    url_password: "{{ item.password | default(omit) }}"
  with_items: "{{redmine_plugins['file']}}"
  when: redmine_plugins is defined and redmine_plugins['file'] is defined
  become: true
  become_user: "{{rails_app_user}}"

- name: Unpack redmine plugins (file)
  unarchive:
    src: "{{redmine_checkout_path}}/plugins/{{item.url | urlsplit('path') | basename}}"
    dest: "{{redmine_checkout_path}}/plugins/"
    remote_src: True
  with_items: "{{redmine_plugins['file']}}"
  when: redmine_plugins is defined and redmine_plugins['file'] is defined
  become: true
  become_user: "{{rails_app_user}}"

- name: Install required plugin packages
  package:
    name: "{{item[ansible_os_family] | default(item)}}"
  when: redmine_plugins is defined
  loop: >-
      {{ redmine_plugins['git'] | union(redmine_plugins['file'] | default([])) |
         map(attribute='packages') | reject('undefined') | list }}

- name: Enable version as current
  file:
    src: "{{redmine_checkout_path}}"
    dest: "{{rails_app_path}}"
    owner: "{{rails_app_user}}"
    group: "{{rails_app_user}}"
    state: link

- name: Create shared configuration/data folders
  file:
    path: "{{item}}"
    owner: "{{rails_app_user}}"
    group: "{{rails_app_user}}"
    state: directory
  loop:
    - "{{redmine_log_shared_path}}"
    - "{{redmine_files_shared_path}}"
    - "{{redmine_repos_shared_path}}"
    - "{{redmine_config_shared_path}}"

- name: Create configuration file
  template:
    src: configuration.yml.j2
    dest: "{{redmine_config_shared_path}}/configuration.yml"
    owner: "{{rails_app_user}}"
    group: "{{rails_app_user}}"

- name: Link shared configuration files
  file:
    src: "{{rails_app_config_path}}/{{item}}"
    dest: "{{rails_app_path}}/config/{{item}}"
    owner: "{{rails_app_user}}"
    group: "{{rails_app_user}}"
    state: link
  loop:
    - "{{rails_app_config_path_db | basename}}"
    - "{{rails_app_config_path_puma | basename}}"
    - configuration.yml

- name: Install required gems
  command: bundle install --without development test --path={{rubygems_path}}
  args:
    chdir: "{{rails_app_path}}"
    creates: "{{rails_app_path}}/Gemfile.lock"
  environment:
    PATH: "{{rubygems_path}}/bin:{{ ansible_env.PATH }}"
  become: true
  become_user: "{{rails_app_user}}"

- name: Session store secret generation
  command: bundle exec rake generate_secret_token
  args:
    chdir: "{{rails_app_path}}"
    creates: "{{rails_app_path}}/config/initializers/secret_token.rb"
  environment:
    PATH: "{{rubygems_path}}/bin:{{ ansible_env.PATH }}"
  become: true
  become_user: "{{rails_app_user}}"

- name: Run database migrations
  command: bundle exec rake db:migrate
  args:
    chdir: "{{rails_app_path}}"
  environment:
    PATH: "{{rubygems_path}}/bin:{{ ansible_env.PATH }}"
  become: true
  become_user: "{{rails_app_user}}"
  when: not redmine_skip_migrations
  changed_when: false

- name: Run plugins migrations and copies plugins assets
  command: bundle exec rake redmine:plugins
  args:
    chdir: "{{rails_app_path}}"
  environment:
    PATH: "{{rubygems_path}}/bin:{{ ansible_env.PATH }}"
  become: true
  become_user: "{{rails_app_user}}"
  when:
    - redmine_plugins is defined
    - not redmine_skip_migrations
  changed_when: false

- name: Redmine database default data set
  command: bundle exec rake redmine:load_default_data
  args:
    chdir: "{{rails_app_path}}"
  environment:
    PATH: "{{rubygems_path}}/bin:{{ ansible_env.PATH }}"
    REDMINE_LANG: "{{redmine_lang}}"
  become: true
  become_user: "{{rails_app_user}}"
  when: not redmine_skip_migrations
  changed_when: false

- name: File system permissions
  file:
    path: "{{rails_app_path}}/{{item}}"
    owner: "{{rails_app_user}}"
    group: "{{rails_app_user}}"
    mode: 0755
  with_items:
    - tmp
    - tmp/pdf
    - files
    - public/plugin_assets

- include_tasks: scm.yml
  when: rails_app_proxy == 'apache2'
